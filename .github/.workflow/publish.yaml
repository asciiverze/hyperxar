name: Hyperxar CI/CD

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  workflow_dispatch:


jobs:
  test-build-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.10, 3.11, 3.12 ]

    steps:
    # 1️⃣ Checkout Code
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.HYPERXAR_ACCESS_TOKEN }}

    # 2️⃣ Python Setup
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # 3️⃣ Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine pytest flake8 black py7zr tqdm

    # 4️⃣ Linting
    - name: Lint with flake8
      run: flake8 hyperxar --count --max-line-length=120 --statistics

    - name: Format check with black
      run: black --check hyperxar

    # 5️⃣ Tests ausführen
    - name: Run tests
      run: pytest || echo "No tests found"

    # 6️⃣ Build package (nur einmal, nicht pro Python-Version)
    - name: Build package
      if: matrix.python-version == '3.10'
      run: python -m build

    # 7️⃣ Upload auf PyPI (nur bei Push auf main und Python 3.10)
    - name: Publish to PyPI
      if: github.event_name == 'push' && matrix.python-version == '3.10'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: twine upload dist/*
